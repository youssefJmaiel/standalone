<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>tn.group</groupId>
	<artifactId>standalone</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>standalone-ms</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>11</java.version>
		<app.id>${project.artifactId}</app.id>
		<swagger.version>2.9.2</swagger.version>
		<jacoco.version>0.8.7</jacoco.version>
		<jacoco.ut.exec.datafile>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.exec.datafile>
		<jacoco.it.exec.datafile>${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco.it.exec.datafile>
		<skip.unit.tests>false</skip.unit.tests>
		<skip.integration.tests>false</skip.integration.tests>
		<jacoco.easyms.instr.coverage>0.21</jacoco.easyms.instr.coverage>
		<jacoco.easyms.branch.coverage>0.03</jacoco.easyms.branch.coverage>
		<jacoco.easyms.class.missed>7</jacoco.easyms.class.missed>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.plugin</groupId>
			<artifactId>spring-plugin-core</artifactId>
			<version>1.2.0.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Surefire plugin : Unit test execution -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<!--suppress UnresolvedMavenProperty -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Failsafe plugin : Integration test execution-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<!--
                        Ensures that both integration-test and verify goals of the Failsafe Maven
                        plugin are executed.
                    -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Sets the VM argument line used when integration tests are run. -->
							<!--suppress UnresolvedMavenProperty -->
							<argLine>${failsafeArgLine}</argLine>
							<!--
                                Skips integration tests if the value of skip.integration.tests property
                                is true
                            -->
							<skipTests>${skip.integration.tests}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Jacoco plugin : Code coverage analysis and checks -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<!--
                        Prepares the property pointing to the JaCoCo runtime agent which
                        is passed as VM argument when Maven the Surefire plugin is executed.
                    -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.ut.exec.datafile}</destFile>
							<!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!--
                        Ensures that the code coverage report for unit tests is created after
                        unit tests have been run.
                    -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${jacoco.ut.exec.datafile}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>

							<excludes>
								<exclude>JAVAC.SYNTHCLASS</exclude>
								<exclude>JAVAC.SYNTHMETH</exclude>
								<exclude>**/*Config*.*</exclude>
								<exclude>**/*Configuration.*</exclude>
								<exclude>**/*Application.*</exclude>
								<exclude>**/*Constant*.*</exclude>
								<exclude>**/dto/**/*</exclude>
								<exclude>**/entity/**/*</exclude>
							</excludes>

						</configuration>
					</execution>
					<!-- The Executions required by unit tests are omitted. -->
					<!--
                        Prepares the property pointing to the JaCoCo runtime agent which
                        is passed as VM argument when Maven the Failsafe plugin is executed.
                    -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.it.exec.datafile}</destFile>
							<!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!--
                        Ensures that the code coverage report for integration tests after
                        integration tests have been run.
                    -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${jacoco.it.exec.datafile}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
							<excludes>
								<exclude>JAVAC.SYNTHCLASS</exclude>
								<exclude>JAVAC.SYNTHMETH</exclude>
								<exclude>**/*Config*.*</exclude>
								<exclude>**/*Configuration.*</exclude>
								<exclude>**/*Application.*</exclude>
								<exclude>**/*Constant*.*</exclude>
								<exclude>**/dto/**/*</exclude>
								<exclude>**/entity/**/*</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>merge-results</id>
						<phase>verify</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}/coverage-reports</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
						</configuration>

					</execution>
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>

						<configuration>
							<excludes>
								<exclude>JAVAC.SYNTHCLASS</exclude>
								<exclude>JAVAC.SYNTHMETH</exclude>
								<exclude>**/*Config*.*</exclude>
								<exclude>**/*Configuration.*</exclude>
								<exclude>**/*Application.*</exclude>
								<exclude>**/*Constant*.*</exclude>
								<exclude>**/dto/**/*</exclude>
								<exclude>**/entity/**/*</exclude>
							</excludes>
							<dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.easyms.instr.coverage}</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.easyms.branch.coverage}</minimum>
										</limit>
										<limit>
											<counter>CLASS</counter>
											<value>MISSEDCOUNT</value>
											<maximum>${jacoco.easyms.class.missed}</maximum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
